<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABkAGQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8
        +/8AhYviT/oYte/8GM3/AMVR/wALF8SY/wCRi1//AMGM3/xVY9Ff0dyR7H47zM2P+Fi+JP8AoYte/wDB
        jN/8VR/wsXxJ/wBDFr3/AIMZv/iqx6KPZx7IOZmx/wALF8Sf9DFr3/gxm/8AiqP+Fi+JP+hi17/wYzf/
        ABVY9FHs49kHMzY/4WL4kx/yMWv/APgxm/8AiqP+Fi+JP+hi17/wYzf/ABVY9FHs49kHMzY/4WL4k/6G
        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
        gAooooAKKKKACiiigAooooAKKKKAP//Z
</value>
  </data>
</root>